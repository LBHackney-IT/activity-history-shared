name: publish-nuget-package
on:
  create:
    branches: 
      - release/**
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
    
jobs:
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7

      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
  publish-package:
    name: Publish Package
    runs-on: ubuntu-latest
    needs: calculate-version
    steps:
      - name: Display GitVersion outputs
        run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"
          echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
      # - name: Build the Package
      #   run: |
      #     cd ./Hackney.Shared.Activity
      #     dotnet pack -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} ---configuration Release
      # - name: Publish the Package
      #   run: |
      #     cd /root/project/Hackney.Shared.Activity/bin/Release
      #     dotnet nuget push Hackney.Shared.Activity.*.nupkg -s https://nuget.pkg.github.com/LBHackney-IT/index.json --api-key ${{secrets.NUGET_KEY }} Hackney.Shared.Activity.*/*.nupkg
  
  # build:
  #   env:
  #     BUILD_CONFIG: 'Release'
  #     SOLUTION: 'MySolution.sln'
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Get Build Version
  #     run: |
  #       Import-Module .\build\GetBuildVersion.psm1
  #       Write-Host $Env:GITHUB_REF
  #       $version = GetBuildVersion -VersionString $Env:GITHUB_REF
  #       echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
  #     shell: pwsh
  #   - name: Setup NuGet
  #     uses: NuGet/setup-nuget@v1.0.5
  #   - name: Restore dependencies
  #     run: nuget restore $SOLUTION
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v1
  #     with:
  #       dotnet-version: 3.1.x
  #   - name: Build
  #     run: dotnet build $SOLUTION --configuration $BUILD_CONFIG -p:Version=$BUILD_VERSION --no-restore
  #   - name: Run tests
  #     run: dotnet test /p:Configuration=$env:BUILD_CONFIG --no-restore --no-build --verbosity normal
  #   - name: Publish
  #     if: startsWith(github.ref, 'refs/heads/release')
  #     run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_KEY }}